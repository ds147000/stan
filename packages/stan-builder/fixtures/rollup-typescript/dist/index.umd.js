(function (global, factory) {  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :  typeof define === 'function' && define.amd ? define(factory) :  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.pkg = factory());}(this, (function () { 'use strict';  function _objectWithoutPropertiesLoose(source, excluded) {    if (source == null) return {};    var target = {};    var sourceKeys = Object.keys(source);    var key, i;    for (i = 0; i < sourceKeys.length; i++) {      key = sourceKeys[i];      if (excluded.indexOf(key) >= 0) continue;      target[key] = source[key];    }    return target;  }  var objectWithoutPropertiesLoose = _objectWithoutPropertiesLoose;  function _objectWithoutProperties(source, excluded) {    if (source == null) return {};    var target = objectWithoutPropertiesLoose(source, excluded);    var key, i;    if (Object.getOwnPropertySymbols) {      var sourceSymbolKeys = Object.getOwnPropertySymbols(source);      for (i = 0; i < sourceSymbolKeys.length; i++) {        key = sourceSymbolKeys[i];        if (excluded.indexOf(key) >= 0) continue;        if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;        target[key] = source[key];      }    }    return target;  }  var objectWithoutProperties = _objectWithoutProperties;  function index (args) {      var _args$name;      var name = args.name, o = objectWithoutProperties(args, ["name"]);      console.log(o);      return (_args$name = args === null || args === void 0 ? void 0 : args.name) !== null && _args$name !== void 0 ? _args$name : 'stan';  }  return index;})));//# sourceMappingURL=index.umd.js.map